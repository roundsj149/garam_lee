<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dayside.vacation.member.mapper.MemberMapper">

	<!-- 회원 가입 -->
	<insert id="insertMemberInfo">
	<![CDATA[
		INSERT /* MemberMapper.xml insertMemberInfo */
			INTO DAYSIDE_MEMBER 
		VALUES(
				#{employeeNo}, 
				#{emailId}, 
				#{fullname}, 
				#{pw}, 
				#{hashSalt}, 
				#{team}, 
				#{leaderYn}, 
				#{adminYn}, 
				SYSDATE, 
				'JOIN_REQUEST')
	]]>
	</insert>
	
	<!-- 동일한 아이디 확인(리턴타입 Member) -->
	<resultMap type="Map" id="idCheck">
		<id column="EMAIL_ID" property="emailId" />
		<id column="PW" property="pw" />
		<id column="EMPLOYEE_NO" property="employeeNo" />
		<id column="JOIN_STATUS" property="joinStatus" />
		<id column="HASH_SALT" property="hashSalt" />
	</resultMap>
	<select id="selectId" resultMap="idCheck">
	<![CDATA[
		SELECT /* MemberMapper.xml selectId */
			EMAIL_ID, 
			PW, 
			EMPLOYEE_NO, 
			JOIN_STATUS, 
			HASH_SALT 
		FROM 
			DAYSIDE_MEMBER
		WHERE
			EMAIL_ID = #{emailId}
	]]>
	</select>
	
	<!-- 사번 중복 확인 -->
	<select id="selectEmployeeNo" resultType="String">
	<![CDATA[
		SELECT /* MemberMapper.xml selectEmployeeNo */
			EMPLOYEE_NO 
		FROM 
			DAYSIDE_MEMBER
		WHERE 
			EMPLOYEE_NO = #{employeeNo}
	]]>
	</select>
	
	<!-- 아이디 중복 확인(리턴타입 String) -->
	<select id="selectEmailId" resultType="String">
	<![CDATA[
		SELECT /* MemberMapper.xml selectEmailId */
			EMAIL_ID
		FROM 
			DAYSIDE_MEMBER
		WHERE 
			EMAIL_ID = #{emailId}
	]]>
	</select>
	
	<!-- 소속팀명 조회 -->
	<select id="selectAllTeam" resultType="String">
	<![CDATA[
		SELECT /* MemberMapper.xml selectAllTeam */
			CODE_ID
		FROM DAYSIDE_CODE
		WHERE CODE_GROUP_ID = 'TEAM'
	]]>
	</select>
	
	<!-- 사번, 이름 가져오기 -->
	<resultMap type="Map" id="noNameMap">
		<id column="EMPLOYEE_NO" property="employeeNo" />
		<id column="FULLNAME" property="fullname" />
	</resultMap>
	<select id="selectNoName" resultMap="noNameMap">
	<![CDATA[
		SELECT /* MemberMapper.xml selectNoName */
			EMPLOYEE_NO,
			FULLNAME
		FROM 
			DAYSIDE_MEMBER
		WHERE 
			EMPLOYEE_NO = #{employeeNo}
	]]>
	</select>
	
	<!-- 관리자 여부 확인 -->
	<select id="selectAdminYN" resultType="String">
	<![CDATA[
		SELECT /* MemberMapper.xml selectAdminYN */
			ADMIN_YN
		FROM 
			DAYSIDE_MEMBER
		WHERE 
			EMPLOYEE_NO = #{employeeNo}
	]]>
	</select>
	
	<!-- 이름 검색 -->
	<select id="selectEmployeeNoByFullname" resultType="String">
	<![CDATA[
		SELECT /* MemberMapper.xml selectEmployeeNoByFullname */
			EMPLOYEE_NO 
		FROM 
			DAYSIDE_MEMBER 
		WHERE 
			FULLNAME LIKE '%'||#{searchWord}||'%'
	]]>
	</select>
	
	<!-- 비밀번호, salt 가져오기 -->
	<resultMap type="Map" id="pwSaltMap">
		<id column="PW" property="pw" />
		<id column="HASH_SALT" property="hashSalt" />
	</resultMap>
	<select id="selectPwSalt" resultMap="pwSaltMap">
	<![CDATA[
		SELECT /* MemberMapper.xml selectPwSalt */
			PW,
			HASH_SALT
		FROM 
			DAYSIDE_MEMBER
		WHERE 
			EMPLOYEE_NO = #{employeeNo}
	]]>
	</select>
	
	<!-- 비밀번호 수정 -->
	<update id="updatePw">
		UPDATE /* MemberMapper.xml updatePw */ 
			DAYSIDE_MEMBER 
		SET 
			PW = #{pw}
		WHERE 
			EMPLOYEE_NO = #{employeeNo}
	</update>
	
	<!-- 휴가 신청 시퀀스 -->
	<select id="getVacationApplyNo" resultType="int">
    	SELECT TEST_TABLE_SEQ.NEXTVAL FROM DUAL
	</select>
	
	<!-- 인증 정보 저장 -->
	<insert id="insertAuthInfo">
		INSERT /* MemberMapper.xml insertAuthInfo */
			INTO DAYSIDE_AUTH
		VALUES
			(
				#{employeeNo},
				#{authKey},
				'N'
			)
	</insert>
	
	<!-- 인증키 인증 업데이트 -->
	<update id="updateAuthKey">
		UPDATE /* MemberMapper.xml updateAuthKey */
			DAYSIDE_AUTH
		SET AUTH_CERTIFICATION = 'Y'
		WHERE
			AUTH_KEY LIKE #{authKey}
	</update>
	
	<!-- 인증 정보 가져오기 -->
	<select id="getAuthCertification" resultType="String">
		SELECT /* MemberMapper.xml getAuthCertification */
			AUTH_CERTIFICATION
		FROM
			DAYSIDE_AUTH
		WHERE
			EMPLOYEE_NO = #{employeeNo}
	</select>
	
	<!-- 인증키 존재 여부 확인 -->
	<select id="selectAuthKey" resultType="int">
		SELECT /* MemberMapper.xml selectAuthKey */ 
			COUNT(*)
		FROM
			DAYSIDE_AUTH
		WHERE
			AUTH_KEY LIKE #{authKey}
	</select>
</mapper>








