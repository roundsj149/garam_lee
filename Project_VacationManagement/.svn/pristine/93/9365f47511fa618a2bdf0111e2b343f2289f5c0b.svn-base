package com.dayside.vacation.common.filter;

import java.io.IOException;
import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class LoginCheckFilter implements Filter {

	private static final Logger LOGGER = LoggerFactory.getLogger(LoginCheckFilter.class);

	@Override
	public void destroy() {

	}

	@Override
	public void init(FilterConfig filterConfig) throws ServletException {

	}

	@Override
	public void doFilter(ServletRequest req, ServletResponse resp, FilterChain chain)
			throws IOException, ServletException {
		LOGGER.debug("로그인 필터 들어옴");
		HttpServletRequest request = (HttpServletRequest) req;
		HttpServletResponse response = (HttpServletResponse) resp;

		// 입력받은 uri
		String uri = request.getRequestURI();
		LOGGER.debug("입력받은 uri: " + uri);

		String employeeNo = (String) request.getSession().getAttribute("memberSession");
		LOGGER.debug("세션(사번): " + employeeNo);
		if (employeeNo == null) {
			LOGGER.debug("로그인 필터 - employeeNo = null, 로그인 페이지로 이동시킴!");
			response.sendRedirect("/member/login");
			return;

		}

		// 다른 필터가 있을 때 그 필터를 찾아가고, 없으면 리소스 리턴
		chain.doFilter(request, response);
		LOGGER.debug("로그인 필터 나감");
	}
}
