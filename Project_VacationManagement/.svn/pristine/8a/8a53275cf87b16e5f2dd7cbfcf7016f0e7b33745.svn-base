package com.dayside.vacation.common.filter;

import java.io.IOException;
import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class LogoutCheckFilter implements Filter {

	private static final Logger LOGGER = LoggerFactory.getLogger(LogoutCheckFilter.class);

	@Override
	public void destroy() {

	}

	@Override
	public void init(FilterConfig filterConfig) throws ServletException {

	}

	@Override
	public void doFilter(ServletRequest req, ServletResponse resp, FilterChain chain)
			throws IOException, ServletException {
		LOGGER.debug("로그아웃 필터 시작");
		HttpServletRequest request = (HttpServletRequest) req;
		HttpServletResponse response = (HttpServletResponse) resp;

		LOGGER.debug("가입 아이디: {}", request.getParameter("emailId"));

		// 입력받은 uri
		String uri = request.getRequestURI();
		String employeeNo = (String) request.getSession().getAttribute("memberSession");
		LOGGER.debug("로그아웃 필터 - uri 거른 후 " + uri);
		if (employeeNo != null) {
			LOGGER.debug("로그아웃 필터 - 이미 로그인 한 상태! list페이지로 이동");
			response.sendRedirect("/vacation/list");
			return;

		}
		// 다른 필터가 있을 때 그 필터를 찾아가고, 없으면 리소스 리턴
		chain.doFilter(request, response);
		LOGGER.debug("로그아웃 필터 끝");
	}
}
